<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 어노테이션 설정 방식 사용 -->
	<annotation-driven />
	
	<!-- nexaStudy 패키지 안의 클래스들을 스캔하고, 어노테이션 확인 후 bean 인스턴스 생성 -->
	<context:component-scan base-package="sample" />

	<!-- 정적 자원 매핑 기능 -->
	<resources mapping="/**" location="/" />

	<!-- p:order 를 사용하여 넥사크로17 RequestMappingHandlerAdapter 보다 후순위로 호출한다 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 넥사크로 uiadapter 연동 작업 -->
	<beans:bean id="nexacroInterceptor" class="com.nexacro.uiadapter17.spring.core.servlet.NexacroInterceptor" />
	<beans:bean id="nexacroFileView" class="com.nexacro.uiadapter17.spring.core.view.NexacroFileView" />
	<beans:bean id="nexacroView" class="com.nexacro.uiadapter17.spring.core.view.NexacroView">
		<beans:property name="defaultContentType" value="PlatformXml" />
		<beans:property name="defaultCharset" value="UTF-8" />
	</beans:bean>
	
	
	<!-- RequestMappingHandlerAdapter 구현체 등록 -->
	
	<!-- 넥사크로 플랫폼의 입/출력 데이터 변환을 위해 Spring 의 RequestMappingHandlerAdapter 를 확장한 형태. java.util.Map 의 데이터 변환을 제공 -->
	<beans:bean class="com.nexacro.uiadapter17.spring.core.resolve.NexacroRequestMappingHandlerAdapter" p:order="0">
		<beans:property name="customArgumentResolvers" >
			<!-- 개발자가 작성하게 되는 Controller 의 입력 파라미터 중 넥사크로의 데이터 변환을 수행 ex) Dataset > JavaBean -->
			<beans:list>
				<beans:bean class="com.nexacro.uiadapter17.spring.core.resolve.NexacroMethodArgumentResolver" />
			</beans:list>		
		</beans:property>
		
		<beans:property name="customReturnValueHandlers" >
			<beans:list>
				<!-- Controller 에서 반환되는 값을 넥사크로 데이터로 변환 ex) JavaBean > Dataset -->
				<beans:bean class="com.nexacro.uiadapter17.spring.core.resolve.NexacroHandlerMethodReturnValueHandler">
					<!-- 넥사크로로 데이터 송신하는 역할 -->
					<beans:property name="view" ref="nexacroView" />
					
					<!-- 넥사크로로 File 데이터 송신하는 역할 -->
					<beans:property name="fileView" ref="nexacroFileView" />
				</beans:bean>
			</beans:list>
		</beans:property>
	</beans:bean>
	
</beans:beans>